[{"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\index.js":"1","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\App.js":"3","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Home.js":"4","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Login.js":"5","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\UserContext.js":"6","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Register.js":"7","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\ThreadPreviewList.js":"8","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Sidebar.js":"9","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Search.js":"10","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\ThreadPreview.js":"11","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\NewThread.js":"12","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Loading.js":"13","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Thread.js":"14","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Post.js":"15"},{"size":494,"mtime":1609345712088,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608843314434,"results":"18","hashOfConfig":"17"},{"size":1405,"mtime":1611093370008,"results":"19","hashOfConfig":"17"},{"size":1403,"mtime":1611097956318,"results":"20","hashOfConfig":"17"},{"size":2334,"mtime":1610328568790,"results":"21","hashOfConfig":"17"},{"size":111,"mtime":1609695440715,"results":"22","hashOfConfig":"17"},{"size":2628,"mtime":1610328519248,"results":"23","hashOfConfig":"17"},{"size":1057,"mtime":1610587239128,"results":"24","hashOfConfig":"17"},{"size":5958,"mtime":1611098561997,"results":"25","hashOfConfig":"17"},{"size":1123,"mtime":1610579526607,"results":"26","hashOfConfig":"17"},{"size":2063,"mtime":1611092532782,"results":"27","hashOfConfig":"17"},{"size":3223,"mtime":1610580246596,"results":"28","hashOfConfig":"17"},{"size":489,"mtime":1610411429638,"results":"29","hashOfConfig":"17"},{"size":2619,"mtime":1611105746515,"results":"30","hashOfConfig":"17"},{"size":2357,"mtime":1611103342087,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"u2pbk8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\index.js",[],["70","71"],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\App.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Home.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Login.js",["72"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nvar Login = () => {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      Username: username,\r\n      Password: password,\r\n    }),\r\n    credentials: \"include\",\r\n  };\r\n\r\n  const url = \"http://localhost:5000/api/users/login\";\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var response = await fetch(url, requestOptions);\r\n    if (response.status !== 200) {\r\n      return alert(\"Login error. Try again\");\r\n    } else {\r\n      try {\r\n        var data = await response.text();\r\n        localStorage.setItem(\"user\", data);\r\n        setUser(data);\r\n        history.push(\"/\");\r\n      } catch (err) {\r\n        alert(\"Something went wrong. Try again\");\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-body\">\r\n      <div className=\"container\">\r\n        <div className=\"main-body p-0\">\r\n          <form className=\"form-signin\" onSubmit={handleSubmit}>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n            <label className=\"sr-only\">Username</label>\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Username\"\r\n              required\r\n              autoFocus\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              value={username}\r\n            />\r\n            <label className=\"sr-only\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n              Sign in\r\n            </button>\r\n            <p className=\"mt-5 mb-3 text-muted\">&copy; 2020-21</p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\UserContext.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Register.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\ThreadPreviewList.js",["73"],"import React, { useEffect, useState } from \"react\";\r\nimport ThreadPreview from \"./ThreadPreview\";\r\nimport Loading from \"./Loading\";\r\n\r\nvar ThreadPreviewList = (props) => {\r\n  const [threads, setThreads] = useState({});\r\n\r\n  const fetchThreads = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:5000/api/thread/${props.threadSortOption}`,\r\n      {\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    try {\r\n      const data = await response.json();\r\n      setThreads(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchThreads();\r\n  }, [props.threadSortOption]);\r\n\r\n  return (\r\n    <div className=\"inner-main-body p-2 p-sm-3 collapse forum-content show\">\r\n      {threads.length > 0 ? (\r\n        threads.map((thread) => (\r\n          <ThreadPreview key={thread.threadId} thread={thread} />\r\n        ))\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadPreviewList;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Sidebar.js",["74","75"],"import React, { useContext } from \"react\";\r\nimport UserContext from \"./UserContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nvar Sidebar = () => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const logout = async () => {\r\n    var url = \"http://localhost:5000/api/users/logout\";\r\n    var requestOptions = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    };\r\n    var response = await fetch(url, requestOptions);\r\n    if (response.status !== 200) {\r\n      return alert(\"Something went wrong. Try again.\");\r\n    } else {\r\n      try {\r\n        localStorage.setItem(\"user\", \"\");\r\n        setUser(\"\");\r\n      } catch (err) {\r\n        console.log(err.Message);\r\n        return alert(\"Something went wrong. Try again\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-sidebar\">\r\n      <div className=\"inner-sidebar-header justify-content-center\">\r\n        {user !== \"\" ? (\r\n          <button\r\n            className=\"btn btn-primary has-icon btn-block\"\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#threadModal\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className=\"feather feather-plus mr-2\"\r\n            >\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n            NEW DISCUSSION\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-primary has-icon btn-block\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className=\"feather feather-plus mr-2\"\r\n            >\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n            NEW DISCUSSION\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"inner-sidebar-body p-0\">\r\n        <div className=\"p-3 h-100\" dataSimplebar=\"init\">\r\n          <div className=\"simplebar-wrapper\" style={{ margin: -16 }}>\r\n            <div className=\"simplebar-height-auto-observer-wrapper\">\r\n              <div className=\"simplebar-height-auto-observer\"></div>\r\n            </div>\r\n            <div className=\"simplebar-mask\">\r\n              <div className=\"simplebar-offset\" style={{ right: 0, bottom: 0 }}>\r\n                <div\r\n                  className=\"simplebar-content-wrapper\"\r\n                  style={{ height: 100 }}\r\n                >\r\n                  <div className=\"simplebar-content\" style={{ padding: 16 }}>\r\n                    {user !== \"\" ? (\r\n                      <nav className=\"nav nav-pills nav-gap-y-1 flex-column\">\r\n                        <span className=\"nav-link nav-link-faded has-icon\">\r\n                          {user}\r\n                        </span>\r\n                        <a\r\n                          href={\"/\"}\r\n                          className=\"nav-link nav-link-faded has-icon\"\r\n                        >\r\n                          Home\r\n                        </a>\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={logout}\r\n                          className=\"nav-link nav-link-faded has-icon\"\r\n                        >\r\n                          Logout\r\n                        </a>\r\n                      </nav>\r\n                    ) : (\r\n                      <nav className=\"nav nav-pills nav-gap-y-1 flex-column\">\r\n                        <a\r\n                          href={\"/\"}\r\n                          className=\"nav-link nav-link-faded has-icon\"\r\n                        >\r\n                          Home\r\n                        </a>\r\n                        <a\r\n                          href=\"/login\"\r\n                          className=\"nav-link nav-link-faded has-icon\"\r\n                        >\r\n                          Login\r\n                        </a>\r\n                        <a\r\n                          href=\"/register\"\r\n                          className=\"nav-link nav-link-faded has-icon\"\r\n                        >\r\n                          Register\r\n                        </a>\r\n                      </nav>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"simplebar-placeholder\"\r\n              style={{ width: 234, height: 292 }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"simplebar-track simplebar-horizontal\"\r\n            style={{ visibility: \"hidden\" }}\r\n          >\r\n            <div\r\n              className=\"simplebar-scrollbar\"\r\n              style={{ width: 0, display: \"none\" }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"simplebar-track simplebar-vertical\"\r\n            style={{ visibility: \"visible\" }}\r\n          >\r\n            <div\r\n              className=\"simplebar-scrollbar\"\r\n              style={{\r\n                height: 151,\r\n                display: \"block\",\r\n                transform: \"translate3d(0, 0, 0)\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Search.js",["76"],"import React from \"react\";\r\n\r\nvar Search = (props) => {\r\n  console.log(props);\r\n\r\n  const handleSelect = (e) => {\r\n    props.option.setThreadSortOption(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-main-header\">\r\n      <a\r\n        className=\"nav-link nav-icon rounded-circle nav-link-faded mr-3 d-md-none\"\r\n        href=\"\"\r\n        data-toggle=\"inner-sidebar\"\r\n      >\r\n        <i className=\"material-icons\">arrow_forward_ios</i>\r\n      </a>\r\n      <select\r\n        value={props.option.threadSortOption}\r\n        onChange={handleSelect}\r\n        className=\"custom-select custom-select-sm w-auto mr-1\"\r\n      >\r\n        <option value=\"recent\">Latest</option>\r\n        <option value=\"popular\">Popular</option>\r\n        <option value=\"noreplies\">No Replies Yet</option>\r\n      </select>\r\n      <span className=\"input-icon input-icon-sm ml-auto w-auto\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control form-control-sm bg-gray-200 border-gray-200 shadow-none mb-4 mt-4\"\r\n          placeholder=\"Search forum\"\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\ThreadPreview.js",["77"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nvar ThreadPreview = (props) => {\r\n  var timeNow = new Date();\r\n  var timePosted = new Date(props.thread.posts[0].timePosted);\r\n\r\n  var timeElapsed = moment.utc(timeNow - timePosted).format(\"DD:HH:mm\");\r\n\r\n  const threadToLinkTo = `/thread/${props.thread.threadId}`;\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body p-2 p-sm-3\">\r\n        <div className=\"media forum-item\">\r\n          <a href=\"\" data-toggle=\"collapse\" data-target=\".forum-content\">\r\n            <img\r\n              src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\r\n              className=\"mr-3 rounded-circle\"\r\n              width=\"50\"\r\n              alt=\"User\"\r\n            />\r\n          </a>\r\n          <div className=\"media-body\">\r\n            <h6>\r\n              <Link\r\n                to={threadToLinkTo}\r\n                data-toggle=\"collapse\"\r\n                className=\"text-body\"\r\n              >\r\n                {props.thread.title}\r\n              </Link>\r\n            </h6>\r\n            <p className=\"text-secondary\">{props.thread.posts[0].content}</p>\r\n            {props.thread.posts.length > 1 ? (\r\n              <p className=\"text-muted\">\r\n                {\r\n                  props.thread.posts[props.thread.posts.length - 1]\r\n                    .applicationUser.userName\r\n                }{\" \"}\r\n                replied{\" \"}\r\n                <span className=\"text-secondary font-weight-bold\">\r\n                  {timeElapsed} ago\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              \" \"\r\n            )}\r\n          </div>\r\n          <div className=\"text-muted small text-center align-self-center\">\r\n            <span className=\"d-none d-sm-inline-block\">\r\n              <i className=\"far fa-eye\"></i>Replies{\" \"}\r\n              {props.thread.posts.length - 1}\r\n            </span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadPreview;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\NewThread.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Thread.js",["78","79"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Post from \"./Post\";\r\nimport Loading from \"./Loading\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nconst Thread = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [thread, setThread] = useState(null);\r\n  const history = useHistory();\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n\r\n  console.log(thread);\r\n\r\n  const fetchThread = async () => {\r\n    const response = await fetch(`http://localhost:5000/api/thread/${id}`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    try {\r\n      const data = await response.json();\r\n      setThread(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchThread();\r\n  }, []);\r\n\r\n  const handleNewPostSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (user === \"\") {\r\n      history.replace(\"/login\");\r\n      history.go(0);\r\n    } else {\r\n      try {\r\n        console.log(thread.threadId);\r\n        const response = await fetch(\"http://localhost:5000/api/post/create\", {\r\n          credentials: \"include\",\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            Content: newPostContent,\r\n            TimePosted: new Date().toISOString(),\r\n            ThreadId: thread.threadId,\r\n          }),\r\n        });\r\n        let data = await response.json();\r\n        setThread(data);\r\n        setNewPostContent(\"\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-main-body p-2 p-sm-3 collapse forum-content show\">\r\n      {thread ? <h3 style={{ paddingBottom: \"10px\" }}>{thread.title}</h3> : \"\"}\r\n      {thread ? (\r\n        thread.posts.map((post) => <Post key={post.postId} post={post} />)\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      <form onSubmit={handleNewPostSubmit}>\r\n        <div className=\"form-group shadow-textarea\">\r\n          <textarea\r\n            value={newPostContent}\r\n            onChange={(e) => setNewPostContent(e.target.value)}\r\n            className=\"form-control z-depth-1\"\r\n            id=\"exampleFormControlTextarea6\"\r\n            rows=\"3\"\r\n            placeholder=\"New post\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Post\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thread;\r\n","C:\\Users\\evere\\Documents\\forumApp\\forum\\frontend\\src\\components\\Post.js",["80","81","82"],"import React, { useContext, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nvar Post = (props) => {\r\n  var [user, setUser] = useContext(UserContext);\r\n  const [postData, setPostData] = useState(props.post);\r\n\r\n  var timePosted = moment\r\n    .utc(props.post.timePosted)\r\n    .format(\"dddd, MMMM Do, h:mm a\");\r\n\r\n  const [hasUserLikedPost, setHasUserLikedPost] = useState(() => {\r\n    postData.likes.forEach((item) => {\r\n      console.log(item);\r\n      if (item.applicationUser.userName === user) {\r\n        return true;\r\n      }\r\n    });\r\n    return false;\r\n  });\r\n\r\n  var likePost = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/post/like/${props.post.postId}`,\r\n        {\r\n          credentials: \"include\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setPostData(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <div className=\"media forum-item\">\r\n          <a href=\"\" className=\"card-link\">\r\n            <img\r\n              src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\r\n              className=\"rounded-circle\"\r\n              width=\"50\"\r\n              alt=\"User\"\r\n            />\r\n          </a>\r\n          <div className=\"media-body ml-3\">\r\n            <span className=\"text-secondary\">\r\n              {postData.applicationUser.userName}\r\n            </span>\r\n            <div className=\"mt-3 font-size-sm\">\r\n              <p>{postData.content}</p>\r\n              <small className=\"text-muted\">{timePosted}</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-muted small text-center\">\r\n            <span className=\"d-none d-sm-inline-block\">\r\n              <i className=\"far fa-eye\"></i> {postData.likes.length}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {user === \"\" ? (\r\n          \"\"\r\n        ) : hasUserLikedPost ? (\r\n          <small>Liked</small>\r\n        ) : (\r\n          <button className=\"btn btn-primary\" onClick={likePost}>\r\n            Like\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":28,"column":6,"nodeType":"93","endLine":28,"endColumn":30,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":3,"column":22,"nodeType":"89","messageId":"90","endLine":3,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":110,"column":25,"nodeType":"98","endLine":114,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":12,"column":7,"nodeType":"98","endLine":16,"endColumn":8},{"ruleId":"96","severity":1,"message":"97","line":17,"column":11,"nodeType":"98","endLine":17,"endColumn":74},{"ruleId":"87","severity":1,"message":"99","line":9,"column":16,"nodeType":"89","messageId":"90","endLine":9,"endColumn":23},{"ruleId":"91","severity":1,"message":"100","line":33,"column":6,"nodeType":"93","endLine":33,"endColumn":8,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"99","line":6,"column":14,"nodeType":"89","messageId":"90","endLine":6,"endColumn":21},{"ruleId":"87","severity":1,"message":"102","line":13,"column":28,"nodeType":"89","messageId":"90","endLine":13,"endColumn":47},{"ruleId":"96","severity":1,"message":"97","line":46,"column":11,"nodeType":"98","endLine":46,"endColumn":44},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchThreads'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchThread'. Either include it or remove the dependency array.",["106"],"'setHasUserLikedPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [fetchThreads, props.threadSortOption]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchThread]",{"range":"113","text":"114"},[689,713],"[fetchThreads, props.threadSortOption]",[919,921],"[fetchThread]"]